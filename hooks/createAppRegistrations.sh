#!/bin/bash

# This script is part of the sample's workflow for configuring App Registrations
# in Azure AD and saving the appropriate values in Key Vault, and Azure App Config Service
# so that the application can authenticate users. Note that an app registration is
# something you'll want to set up once, and reuse for every version of the web app
# that you deploy. You can learn more about app registrations at
# https://learn.microsoft.com/en-us/azure/active-directory/develop/application-model
#
# If you do not have permission to create App Registrations consider
# sharing this script, or something similar, with your administrators to help them
# set up the variables you need to integrate with Azure AD
#
# This code may be repurposed for your scenario as desired
# but is not covered by the guidance in this content.

# Using Azure CLI command to create an app registration on Entra ID: https://learn.microsoft.com/cli/azure/ad/app?view=azure-cli-latest

############### TODO: port working changes from powershell script to this bash script ######################
if [[$env:USE_EntraIDAuthentication -eq "false"]] 
then

    echo "Skipping app registration creation because USE_EntraIDAuthentication is set to false"
    exit 0

else

    az config set extension.use_dynamic_install=yes_without_prompt

    echo "Creating app registration for web app and retrieving object id..."
    #Calculate redirect uri
    $redirectUri = "https://${env:WEB_APP_NAME}.azurewebsites.net/.auth/login/aad/callback"

    # Create app registration for web app: https://learn.microsoft.com/cli/azure/ad/app?view=azure-cli-latest#az-ad-app-create
    OBJECT_ID=$(az ad app create --display-name $env:WEB_APP_NAME --enable-id-token-issuance true --sign-in-audience 'AzureADMyOrg' --web-redirect-uris $redirectUri --required-resource-accesses '@hooks\resourcescope.json'  --query "{id:id}" -o tsv)

    # Override default app registration setting for access token version to support Entra ID v2 endpoints. BE AWARE the new token audience will start showing after the next refresh cycle -> worst case: several hours.
    az rest --method PATCH --headers "Content-Type=application/json" --uri https://graph.microsoft.com/v1.0/applications/$OBJECT_ID --body '{"api":{"requestedAccessTokenVersion": 2}}'

    echo "Generating secret for app registration..."
    # Create secret for app registration
    NEW_SECRET=$(az ad app credential reset --id $OBJECT_ID --append --display-name 'Generated by AZD' --query "{password:password}" -o tsv)

    echo "Storing app registration secret in key vault..."
    #Store secret in key vault
    az keyvault secret set --vault-name $env:AZURE_KEY_VAULT_NAME --name $env:AAD_KV_SECRET_NAME --value $SECRET

    # all done
    exit 0

fi
# This script is part of the sample's workflow for configuring App Registrations
# in Azure AD and saving the appropriate values in Key Vault, and Azure App Config Service
# so that the application can authenticate Entra ID users. Note that an app registration is
# something you'll want to set up once, and reuse for every version of the web app
# that you deploy. You can learn more about app registrations at
# https://learn.microsoft.com/en-us/azure/active-directory/develop/application-model
#
# If you do not have permission to create App Registrations consider
# sharing this script, or something similar, with your administrators to help them
# set up the variables you need to integrate with Azure AD
#
# This code may be repurposed for your scenario as desired
# but is not covered by the guidance in this content.

# Using Azure CLI command to create an app registration on Entra ID: https://learn.microsoft.com/cli/azure/ad/app?view=azure-cli-latest
# and https://learn.microsoft.com/en-us/azure/app-service/configure-authentication-provider-aad?tabs=workforce-tenant

try {
    #Ensure Authv2 extension is installed. See https://learn.microsoft.com/en-us/cli/azure/webapp/auth/microsoft?view=azure-cli-latest
    az config set extension.use_dynamic_install=yes_without_prompt

    if ($env:USE_EntraIDAuthentication -eq "false") {

        Write-Output "Skipping app registration creation because USE_EntraIDAuthentication is set to false"
        exit 0

    } else {

        Write-Output "Creating app registration for web app and retrieving object id..."
        #Calculate redirect uri
        $redirectUri = "https://${env:WEB_APP_NAME}.azurewebsites.net/.auth/login/aad/callback"

        #Compose aad app registration config supporting AUTH v2
        $appRegistrationConfig = (@{
            displayName = $env:WEB_APP_NAME
            signInAudience = "AzureADMyOrg"
            api = @{
                requestedAccessTokenVersion = 2
            }
            requiredResourceAccess = @(
                @{
                    resourceAppId = "00000003-0000-0000-c000-000000000000"
                    resourceAccess = @(
                        @{
                            id = "e1fe6dd8-ba31-4d61-89e7-88639da4683d"
                            type = "Scope"
                       }
                    )
                }
            )
            web = @{
                redirectUris = @($redirectUri)
                implicitGrantSettings = @{
                    enableIdTokenIssuance = "true"
                }
            }
        } | ConvertTo-Json -Depth 4 -Compress).Replace('"', '\"')

        $APP_REG_METADATA = az rest --method POST `
                                    --headers "{'Content-Type':'application/json'}" `
                                    --uri "https://graph.microsoft.com/v1.0/applications" `
                                    --body $appRegistrationConfig | ConvertFrom-Json

        $OBJECT_ID = $APP_REG_METADATA.id
        $CLIENT_ID = $APP_REG_METADATA.appId
        
        Write-Output "Generating secret for app registration..."
        # Create secret for app registration
        $NEW_CREDENTIAL= az ad app credential reset --id $OBJECT_ID `
                                                    --append `
                                                    --display-name 'Generated by AZD' | ConvertFrom-Json
                                                    
        $SECRET = $NEW_CREDENTIAL.password

        Write-Output "Storing app registration secret in key vault..."
        #Store secret in key vault
        az keyvault secret set --vault-name $env:AZURE_KEY_VAULT_NAME `
                               --name $env:AAD_KV_SECRET_NAME `
                               --value $SECRET

        Write-Output "Adding Authentication settings to Azure App Service..."
        $audiences = "api://${CLIENT_ID}" #comma delimited list of audiences
        $ISSUER_URL = "https://login.microsoftonline.com/${env:AZURE_TENANT_ID}/v2.0"

        $authSettingsJson = (@{
            globalValidation = @{
                redirectToProvider = "azureActiveDirectory"
                requireAuthentication = "true"
                unauthenticatedClientAction = "RedirectToLoginPage"
            }
            identityProviders = @{
                azureActiveDirectory = @{
                    enabled = "true"
                    registration = @{
                       clientId = $CLIENT_ID
                       clientSecretSettingName = $env:AAD_KV_SECRET_NAME
                       openIdIssuer = $ISSUER_URL
                    }
                    validation = @{ 
                        allowedAudiences = @($audiences)
                    }
                }
            }
            login = @{
                tokenStore = @{
                    enabled = "true"
                }
            }
            platform = @{
                enabled = "true"
            }
        } | ConvertTo-Json -Depth 4 -Compress).Replace('"', '\"')

        Write-Output "Setting the authentication settings for the webapp in the v2 format, overwriting any existing settings..."
        
        #https://learn.microsoft.com/cli/azure/webapp/auth/config-version?view=azure-cli-latest#az-webapp-auth-config-version-upgrade
        #https://learn.microsoft.com/cli/azure/webapp/auth?view=azure-cli-latest#az-webapp-auth-set
        az webapp auth set --name $env:WEB_APP_NAME `
                           --resource-group $env:AZURE_RESOURCE_GROUP `
                           --subscription $env:AZURE_SUBSCRIPTION_ID `
                           --body $authSettingsJson

        Write-Output "done"
        # all done
        exit 0
    }
} catch {
    Write-Output "An error occurred: $_"
    exit 1
}